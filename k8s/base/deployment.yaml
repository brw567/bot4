---
# ULTRATHINK Trading Engine Deployment
# Team: Full 8-Agent Collaboration
# Research: K8s HFT patterns, PodDisruptionBudget
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bot4-trading-engine
  namespace: bot4-trading
  labels:
    app: bot4
    component: trading-engine
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: bot4
      component: trading-engine
  template:
    metadata:
      labels:
        app: bot4
        component: trading-engine
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: bot4-service-account
      
      # Node affinity for dedicated trading nodes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: workload-type
                operator: In
                values:
                - trading
                - high-performance
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - bot4
              topologyKey: kubernetes.io/hostname
      
      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      
      # Init container for config validation
      initContainers:
      - name: config-validator
        image: bot4/config-validator:latest
        command: ["/bin/sh", "-c"]
        args: ["validate-config /config/trading.yaml"]
        volumeMounts:
        - name: config
          mountPath: /config
      
      containers:
      - name: trading-engine
        image: bot4/trading-engine:latest
        imagePullPolicy: IfNotPresent
        
        # Resource requirements for HFT
        resources:
          requests:
            memory: "8Gi"
            cpu: "4"
            ephemeral-storage: "10Gi"
          limits:
            memory: "16Gi"
            cpu: "8"
            ephemeral-storage: "20Gi"
        
        # Environment variables
        env:
        - name: RUST_LOG
          value: "info"
        - name: ENVIRONMENT
          value: "production"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: bot4-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: bot4-secrets
              key: redis-url
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /health/startup
            port: 8080
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        
        # Ports
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: grpc
          containerPort: 50051
          protocol: TCP
        
        # Volume mounts
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: tls-certs
          mountPath: /app/certs
          readOnly: true
        - name: cache
          mountPath: /app/cache
        - name: shared-memory
          mountPath: /dev/shm
      
      volumes:
      - name: config
        configMap:
          name: bot4-config
      - name: tls-certs
        secret:
          secretName: bot4-tls
      - name: cache
        emptyDir:
          sizeLimit: 5Gi
      - name: shared-memory
        emptyDir:
          medium: Memory
          sizeLimit: 2Gi
      
      # Tolerations for dedicated nodes
      tolerations:
      - key: "workload-type"
        operator: "Equal"
        value: "trading"
        effect: "NoSchedule"
---
# PodDisruptionBudget for high availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: bot4-trading-engine-pdb
  namespace: bot4-trading
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: bot4
      component: trading-engine
---
# HorizontalPodAutoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: bot4-trading-engine-hpa
  namespace: bot4-trading
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: bot4-trading-engine
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  - type: Pods
    pods:
      metric:
        name: trading_latency_ms
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 4
        periodSeconds: 30
      selectPolicy: Max
