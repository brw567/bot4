---
# ULTRATHINK RBAC Configuration
# Team: Grace (Compliance) + Dave (Infrastructure)
# Security: Role-based access control
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bot4-service-account
  namespace: bot4-trading
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: bot4-role
  namespace: bot4-trading
rules:
# ConfigMaps - read only
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
# Secrets - read only
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
# Pods - read and update for leader election
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "update", "patch"]
# Events - create for audit
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
# Leases for leader election
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: bot4-rolebinding
  namespace: bot4-trading
subjects:
- kind: ServiceAccount
  name: bot4-service-account
  namespace: bot4-trading
roleRef:
  kind: Role
  name: bot4-role
  apiGroup: rbac.authorization.k8s.io
---
# ClusterRole for monitoring
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bot4-metrics-reader
rules:
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: bot4-metrics-reader-binding
subjects:
- kind: ServiceAccount
  name: bot4-service-account
  namespace: bot4-trading
roleRef:
  kind: ClusterRole
  name: bot4-metrics-reader
  apiGroup: rbac.authorization.k8s.io
